"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolygonDrawerBase = void 0;
const engine_1 = require("@tsparticles/engine");
const piDeg = 180, origin = { x: 0, y: 0 }, defaultSides = 5, sidesOffset = 2;
class PolygonDrawerBase {
    draw(data) {
        const { context, particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - (0, engine_1.degToRad)(interiorAngleDegrees);
        if (!context) {
            return;
        }
        context.beginPath();
        context.translate(start.x, start.y);
        context.moveTo(origin.x, origin.y);
        for (let i = 0; i < sideCount; i++) {
            context.lineTo(side.length, origin.y);
            context.translate(side.length, origin.y);
            context.rotate(interiorAngle);
        }
    }
    getSidesCount(particle) {
        const polygon = particle.shapeData;
        return Math.round((0, engine_1.getRangeValue)(polygon?.sides ?? defaultSides));
    }
}
exports.PolygonDrawerBase = PolygonDrawerBase;
