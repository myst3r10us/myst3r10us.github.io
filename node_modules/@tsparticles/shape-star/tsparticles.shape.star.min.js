/*! For license information please see tsparticles.shape.star.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var r="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(this,(e=>(()=>{"use strict";var t={533:t=>{t.exports=e}},r={};function o(e){var a=r[e];if(void 0!==a)return a.exports;var n=r[e]={exports:{}};return t[e](n,n.exports,o),n.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{o.r(a),o.d(a,{loadStarShape:()=>s});var e=o(533);const t=0,r=0;class n{draw(e){const{context:o,particle:a,radius:n}=e,s=a.sides,i=a.starInset??2;o.moveTo(t,r-n);for(let e=0;e<s;e++)o.rotate(Math.PI/s),o.lineTo(t,r-n*i),o.rotate(Math.PI/s),o.lineTo(t,r-n)}getSidesCount(t){const r=t.shapeData;return Math.round((0,e.getRangeValue)(r?.sides??5))}particleInit(t,r){const o=r.shapeData;r.starInset=(0,e.getRangeValue)(o?.inset??2)}}async function s(e,t=!0){await e.addShape("star",new n,t)}})(),a})()));