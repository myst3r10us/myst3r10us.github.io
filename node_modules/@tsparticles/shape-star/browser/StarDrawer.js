import { getRangeValue, } from "@tsparticles/engine";
const defaultInset = 2, origin = { x: 0, y: 0 }, defaultSides = 5;
export class StarDrawer {
    draw(data) {
        const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;
        context.moveTo(origin.x, origin.y - radius);
        for (let i = 0; i < sides; i++) {
            context.rotate(Math.PI / sides);
            context.lineTo(origin.x, origin.y - radius * inset);
            context.rotate(Math.PI / sides);
            context.lineTo(origin.x, origin.y - radius);
        }
    }
    getSidesCount(particle) {
        const star = particle.shapeData;
        return Math.round(getRangeValue(star?.sides ?? defaultSides));
    }
    particleInit(container, particle) {
        const star = particle.shapeData;
        particle.starInset = getRangeValue(star?.inset ?? defaultInset);
    }
}
