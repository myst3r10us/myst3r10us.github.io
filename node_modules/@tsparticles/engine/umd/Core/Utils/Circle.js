(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./Range.js", "./Rectangle.js", "../../Utils/NumberUtils.js"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Circle = void 0;
    const Range_js_1 = require("./Range.js");
    const Rectangle_js_1 = require("./Rectangle.js");
    const NumberUtils_js_1 = require("../../Utils/NumberUtils.js");
    const squareExp = 2;
    class Circle extends Range_js_1.Range {
        constructor(x, y, radius) {
            super(x, y);
            this.radius = radius;
        }
        contains(point) {
            return (0, NumberUtils_js_1.getDistance)(point, this.position) <= this.radius;
        }
        intersects(range) {
            const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;
            if (range instanceof Circle) {
                const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);
                return rSum > dist;
            }
            else if (range instanceof Rectangle_js_1.Rectangle) {
                const { width, height } = range.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);
                return (edges <= r ** squareExp ||
                    (distPos.x <= r + width && distPos.y <= r + height) ||
                    distPos.x <= width ||
                    distPos.y <= height);
            }
            return false;
        }
    }
    exports.Circle = Circle;
});
